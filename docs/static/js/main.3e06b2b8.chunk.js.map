{"version":3,"sources":["components/SearchHeader/SearchHeader.js","components/SearchForm/SearchForm.js","components/Search/Search.js","components/RecipePage/RecipePage.js","App.js","reportWebVitals.js","index.js"],"names":["SearchHeader","lastSearch","className","SearchForm","handleSubmit","handleChange","searchString","onSubmit","placeholder","type","name","required","onChange","value","Search","recipeData","path","map","recipe","i","console","log","JSON","stringify","to","id","src","image","alt","title","RecipePage","props","useState","oneRecipe","setOneRecipe","getRecipe","a","fetch","match","params","RecipePageId","process","res","json","data","useEffect","undefined","extendedIngredients","amount","unit","vegetarian","vegan","glutenFree","dairyFree","dangerouslySetInnerHTML","__html","summary","instructions","App","setRecipeData","setSearchString","setLastSearch","results","event","target","preventDefault","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e06b2b8.chunk.js","sourcesContent":["function SearchHeader({ lastSearch }) {\n    return (\n      <header>\n        <div className=\"brand\">\n          <h1>The recipes you love, all in one place!</h1>\n        </div>\n        <p className=\"last-search\">\n          Showing results for <strong>{lastSearch}</strong>\n        </p>\n      </header>\n    );\n  }\n  export default SearchHeader;","function SearchForm({ handleSubmit, handleChange, searchString }) {\n    return (\n      <form onSubmit={handleSubmit} className=\"form-horizontal\">\n        <input\n          className=\"search-bar\"\n          placeholder=\"Search\"\n          type=\"text\"\n          name=\"searchString\"\n          required\n          onChange={handleChange}\n          value={searchString}\n          placeholder=\"Find something yummy...\"\n        />\n        <button type=\"submit\">Search\n        </button>\n      </form>\n    );\n  }\n  export default SearchForm;","import { Link } from 'react-router-dom';\nimport SearchHeader from \"../SearchHeader/SearchHeader\";\nimport SearchForm from \"../SearchForm/SearchForm\";\n\nfunction Search({lastSearch, recipeData, handleChange, handleSubmit, searchString}) {\n\n    return (\n\n        <div className=\"recipe-container\">\n            <header className=\"header-container\">\n                <SearchHeader path=\"/\" lastSearch={lastSearch} />\n                <SearchForm\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n                searchString={searchString}\n                />\n            </header>\n            {recipeData.map((recipe, i) => {\n                console.log(JSON.stringify(recipe, null, 4));\n                    return (\n                            <div className=\"item-main-div\" key={i}>\n                                <Link className=\"item-container\" to={`/RecipePage/${recipe.id}`}>\n                                    <img className=\"item-image\" src={recipe.image} alt={recipe.title} />\n                                    <h2 className=\"recipe-title\">{recipe.title}</h2>\n                                </Link>\n                            </div>\n                    )\n            })}\n            <footer>Made by: Drew Wilson, *Copyright 2021*</footer>\n        </div>\n    )\n}\n  export default Search;","import {useEffect, useState} from \"react\";\n\nexport default function RecipePage(props) {\n  const [oneRecipe, setOneRecipe] = useState([]);\n  const getRecipe = async () => {\n    try {\n      const res = await fetch(`https://api.spoonacular.com/recipes/${props.match.params.RecipePageId}/information?&parseIngredients&apiKey=${process.env.REACT_APP_API_KEY}`);\n      const data = await res.json();\n      setOneRecipe(data)\n      console.log(JSON.stringify(data, null, 4));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getRecipe();\n  }, []);\n\n\n  if (oneRecipe === undefined) {\n    return <h1>loading ...</h1>\n  } else if (oneRecipe.extendedIngredients === undefined) {\n    return <h1>loading ...</h1>\n  } else if (oneRecipe.extendedIngredients[0] === undefined) {\n    return <h1>loading ...</h1>\n  } else if (oneRecipe.extendedIngredients[0].name === undefined) {\n    return <h1>loading ...</h1>\n  } else if (oneRecipe.extendedIngredients[0].amount === undefined) {\n    return <h1>loading ...</h1>\n  } else if (oneRecipe.extendedIngredients[0].unit === undefined) {\n    return <h1>loading ...</h1>\n  }\n\n  // const extend = oneRecipe.extendedIngredients;\n  // const recipeItems = () => {\n  //   extend.map((item) => {\n  //     return (\n  //           <p>{item.name}: {item.amount} {item.unit}</p>\n  //     )\n  //   })}\n  //   console.log(extend);\n  //   console.log(recipeItems([0]));\n\n  // if (oneRecipe.vegetarian === true) {\n  //   style={color: \"green\"}\n  // } else {\n  //   style={color: \"red\"}\n  // }\n\n  return (\n    <div className=\"recipePage\">\n      <div className=\"main-title\">\n        <h1>{oneRecipe.title}</h1>\n      </div>\n      <div className=\"recipe-pic\">\n        <img src={oneRecipe.image} alt={oneRecipe.title} />\n      </div>\n      <div className=\"health-options\">\n        <p>Vegetarian: {`${oneRecipe.vegetarian}`}</p>\n        <p>Vegan: {`${oneRecipe.vegan}`}</p>\n        <p>Gluten Free: {`${oneRecipe.glutenFree}`}</p>\n        <p>Dairy Free: {`${oneRecipe.dairyFree}`}</p>\n      </div>\n      <div className=\"intro\">\n        <h3>Intro:</h3>\n        <p dangerouslySetInnerHTML={{__html: oneRecipe.summary}}></p>\n      </div>\n      <div className=\"ingredients-list\">\n        <h3>Ingredients:</h3>\n          <div>\n            <ul>\n              {/* {recipeItems()} */}\n              {/* <li>{oneRecipe.extendedIngredients[0].name}: {oneRecipe.extendedIngredients[0].amount} {oneRecipe.extendedIngredients[0].unit}</li> */}\n            </ul>\n          </div>\n      </div>\n      <div className=\"instructions\">\n        <h3>Instructions:</h3>\n        <p dangerouslySetInnerHTML={{__html: oneRecipe.instructions}}></p>\n      </div>\n    </div>\n  );\n};","import { Link, Route, Switch } from 'react-router-dom';\nimport Search from \"./components/Search/Search\";\nimport RecipePage from './components/RecipePage/RecipePage';\nimport GroceryList from \"./components/GroceryList/GroceryList\";\nimport InPantry from \"./components/InPantry/InPantry\";\nimport {useState, useEffect} from \"react\";\n\nfunction App() {\n  \n  const [recipeData, setRecipeData] = useState([]);\n  const [searchString, setSearchString] = useState([\"\"]);\n  const [lastSearch, setLastSearch] = useState(\"\");\n\n  const getRecipe = async () => {\n    try {\n      const res = await fetch(`https://api.spoonacular.com/recipes/complexSearch?query=${searchString}&apiKey=${process.env.REACT_APP_API_KEY}&number=18`);\n      const data = await res.json();\n      // console.log(JSON.stringify(data.results, null, 4));\n      setRecipeData(data.results);\n      setLastSearch(searchString);\n      setSearchString(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  useEffect(() => {\n    getRecipe();\n  }, []);\n\n  useEffect(() => {\n    getRecipe(searchString);\n  }, []);\n\n  function handleChange(event) {\n    setSearchString(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getRecipe(searchString);\n  }\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <nav className=\"homeNav\">\n        <div>\n          <Link className=\"siteName\" to=\"/\">Find-A-Recipe</Link>\n        </div>\n        {/* <Link to=\"/InPantry\">In Your Pantry</Link>\n        <Link to=\"/GroceryList\">Grocery List</Link> */}\n      </nav>\n      <main>\n        <Switch >\n          <div className=\"main-container\">\n            <Route path=\"/\" exact render={() => <Search searchString={searchString} handleSubmit={handleSubmit} handleChange={handleChange} lastSearch={lastSearch} recipeData={recipeData} />} />\n            {/* <Route path=\"/InPantry\" component={InPantry} />\n            <Route path=\"/GroceryList\" component={GroceryList} /> */}\n            <Route path=\"/RecipePage/:RecipePageId\" component={RecipePage} />\n            </div>\n        </Switch>\n        \n      </main>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from \"react-router-dom\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}